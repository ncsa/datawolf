/*******************************************************************************
 * Copyright (c) 2012 University of Illinois/NCSA.  All rights reserved.
 * 
 *   National Center for Supercomputing Applications (NCSA)
 *   http://www.ncsa.illinois.edu/
 * 
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the 
 * "Software"), to deal with the Software without restriction, including 
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 * 
 * - Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimers.
 * - Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimers in the
 *   documentation and/or other materials provided with the distribution.
 * - Neither the names of University of Illinois, NCSA, nor the names
 *   of its contributors may be used to endorse or promote products
 *   derived from this Software without specific prior written permission.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.
 ******************************************************************************/
package edu.illinois.ncsa.datawolf.executor.java.tool;

/**
 * Definition of a dataset (input/output). This class is used to return a
 * dataset needed by the tool.
 * 
 * @author Rob Kooper
 * 
 */
public class Dataset {
    private String id;
    private String name;
    private String description;
    private String type;

    /**
     * Define a dataset that will be used or created by the tool. The filename
     * will be generated by the datawolf.
     * 
     * @param id
     *            the id of the dataset, used when setting the dataset.
     * @param name
     *            the name of the dataset, shown to the user.
     * @param description
     *            description of the dataset, shown as help to the user.
     * @param type
     *            type of the dataset, this is a mimetype.
     */
    public Dataset(String id, String name, String description, String type) {
        this.id = id;
        this.name = name;
        this.description = description;
        this.type = type;
    }

    /**
     * Return the id of the dataset.
     * 
     * @return id of the dataset.
     */
    public String getID() {
        return id;
    }

    /**
     * Set the id of the dataset.
     * 
     * @param id
     *            of the dataset.
     */
    public void setID(String id) {
        this.id = id.trim();
    }

    /**
     * Return the name of the dataset.
     * 
     * @return name of the dataset.
     */
    public String getName() {
        return name;
    }

    /**
     * Set the name of the dataset.
     * 
     * @param name
     *            of the dataset.
     */
    public void setName(String name) {
        this.name = name.trim();
    }

    /**
     * Return the description of the dataset.
     * 
     * @return description of the dataset.
     */
    public String getDescription() {
        return description;
    }

    /**
     * Set the description of the dataset.
     * 
     * @param description
     *            of the dataset.
     */
    public void setDescription(String description) {
        this.description = description.trim();
    }

    /**
     * Return the type of the dataset.
     * 
     * @return type of the dataset.
     */
    public String getType() {
        return type;
    }

    /**
     * Set the type of the dataset.
     * 
     * @param type
     *            of the dataset.
     */
    public void setType(String type) {
        this.type = type.trim();
    }
}
